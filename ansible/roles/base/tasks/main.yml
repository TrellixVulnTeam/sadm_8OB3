---

# Base config

- name: Set timezone
  file:
    path: '/etc/localtime'
    src: '/usr/share/zoneinfo/{{ sadm_timezone }}'
    state: link
    mode: 0644

- name: Install locale.conf
  copy:
    content: "LANG={{ sadm_locale }}\n"
    dest: '/etc/locale.conf'
    mode: 0644

- name: Generate locale
  locale_gen:
    name: '{{ sadm_locale }}'


# Packages

- name: Download Prologin repo key
  get_url:
    url: https://repo.prologin.org/prologin.pub
    dest: /etc/pacman.d/prologin.pub
    mode: 0644
  # Network might not be ready yet.
  retries: 10
  delay: 2
  register: downloadprolokey

- name: Add Prologin repo key to keyring
  shell: |
    pacman-key --add /etc/pacman.d/prologin.pub
    pacman-key --lsign-key prologin
  when: downloadprolokey.changed

- name: Install Prologin package repository
  ini_file:
    path: /etc/pacman.conf
    section: prologin
    option: Server
    value: "https://repo.prologin.org/"

- name: Ignore dangerous package upgrades
  ini_file:
    path: /etc/pacman.conf
    section: options
    option: IgnorePkg
    value: linux postgresql*

- name: Install base packages
  pacman:
    update_cache: yes
    name:
      - atop
      - base-devel
      - bash-eternal-history
      - bind-tools
      - ethtool
      - git
      - htop
      - iftop
      - iotop
      - iperf
      - journalbeat
      - jq
      - libxslt
      - libyaml
      - mtr
      - nethogs
      - postgresql-libs
      - prometheus-node-exporter
      - pwgen
      - python
      - python-setuptools
      - python2
      - rsync
      - sqlite
      - strace
      - tcpdump
      - tmux
      - tree
      - vim
      - wget


# Users

- name: Create prologin groups
  group:
    name: '{{ item.key }}'
    state: present
    gid: '{{ item.value }}'
  loop_control:
    label: '{{ item.key }}'
  loop: '{{ prologin_groups|dict2items }}'

- name: Create prologin users
  user:
    name: '{{ item.key }}'
    state: present
    uid: '{{ item.value.uid }}'
    group: '{{ item.value.groups[0] }}'
    groups: '{{ item.value.groups[1:] }}'
    home: "{{ item.value.home|default('/var/empty') }}"
    create_home: "{{ item.value.create_home|default(False) }}"
  loop_control:
    label: '{{ item.key }}'
  loop: '{{ prologin_users|dict2items }}'

# https://github.com/systemd/systemd/issues/852#issuecomment-127759667
- name: Disable obsolete pam_securetty
  lineinfile:
    path: /etc/pam.d/login
    regexp: 'pam_securetty.so'
    state: absent


# Time

- name: Install timesyncd config
  template:
    src: timesyncd.conf
    dest: /etc/systemd/timesyncd.conf
    mode: 0644
  notify: restart timesyncd

- name: Enable systemd-timesyncd
  systemd:
    name: systemd-timesyncd
    enabled: True


# SSH

- name: Install sshd config
  template:
    src: sshd_config
    dest: /etc/ssh/sshd_config
    mode: 0644
  notify: restart sshd

- name: Enable sshd
  systemd:
    name: sshd
    state: started
    enabled: True


# Monitoring

- name: Add prometheus-node-exporter args
  template:
    src: prometheus-node-exporter
    dest: /etc/conf.d/prometheus-node-exporter
    mode: 0644
  notify: restart prometheus-node-exporter
  tags: prometheus-node-exporter

- name: Enable prometheus-node-exporter
  systemd:
    name: prometheus-node-exporter
    state: started
    enabled: True
  tags: prometheus-node-exporter

- name: Add journalbeat config
  template:
    src: journalbeat.yml
    dest: /etc/journalbeat/journalbeat.yml
    mode: 0644
  notify: restart journalbeat
  tags: journalbeat

- name: Enable journalbeat
  systemd:
    name: journalbeat
    state: started
    enabled: True
  tags: journalbeat
